if (hasProperty("bintrayApiKey") && hasProperty("bintrayUser")) {

    def pomDescription = "Advanced Android RecyclerView calendar"

    tasks.withType(Jar) {
        from(project.projectDir) {
            include 'LICENSE'
            into 'META-INF'
        }
    }

    task androidJavadoc(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.sourceFiles
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
        classpath += configurations.compile
    }

// build a jar with javadoc
    task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
        classifier = 'javadoc'
        from androidJavadoc.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.source
    }

    publishing {
        publications {
            vcalendar(MavenPublication) {
                groupId 'com.edwardstock'
                artifactId 'vcalendar'

                artifact("$buildDir/outputs/aar/vcalendar-release.aar")
                artifact androidSourcesJar
                artifact androidJavadocJar

                version android.defaultConfig.versionName

                pom.withXml {
                    asNode().appendNode("description", pomDescription)
                    def licenses = asNode().appendNode("licenses")
                    def mitLicense = licenses.appendNode("license")
                    mitLicense.appendNode("name", "MIT License")
                    mitLicense.appendNode("url", "https://github.com/edwardstock/vcalendar/blob/master/LICENSE")
                    mitLicense.appendNode("distribution", "repo")
                    mitLicense.appendNode("comments", "Absolutely free license.")

                    def developer = asNode().appendNode("developers").appendNode("developer")
                    developer.appendNode("id", "edwardstock")
                    developer.appendNode("name", "Eduard Maximovich")
                    developer.appendNode("email", "edward.vstock@gmail.com")
                    developer.appendNode("url", "https://github.com/edwardstock")
                    developer.appendNode("roles").appendNode("role", "developer")
                    developer.appendNode("timezone", "Europe/Moscow")

                    def dependenciesNode = asNode().appendNode('dependencies')

                    // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.implementation.allDependencies.each {
                        // Ensure dependencies such as fileTree are not included in the pom.
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }


                }
            }
        }
    }

    println("Bintray user "+bintrayUser)
    println("Bintray key " + bintrayApiKey)

    bintray {
        user = bintrayUser
        key = bintrayApiKey
        pkg {
            repo = 'vcalendar'
            name = 'vcalendar'
            publish = true
            publicDownloadNumbers = true
            licenses = ['MIT']
            vcsUrl = 'https://github.com/edwardstock/vcalendar.git'
            githubRepo = 'https://github.com/edwardstock/vcalendar.git'
            desc = pomDescription
            version {
                name = android.defaultConfig.versionName
                released = new Date()
                vcsTag = android.defaultConfig.versionName
            }
        }
        dryRun = true
        configurations = ['archives']
        override = true
        publications = ['vcalendar']
    }
} else {
    println "System has no bintray user"
}